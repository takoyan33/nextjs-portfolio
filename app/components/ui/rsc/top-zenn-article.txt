"use client"
import React, { useEffect, useState } from "react"
import "swiper/css"
import "swiper/css/navigation"
import "swiper/css/pagination"
import "swiper/css/scrollbar"
import Link from "next/link"
import type { zennProps } from "../../../../types"

export const TopZennArticle = () => {
	const [zennArticles, setZennArticles] = useState<zennProps | null>(null)

	useEffect(() => {
		const fetchArticles = async () => {
			try {
				const response = await fetch(
					"https://zenn.dev/api/articles?username=643866",
				)
				if (!response.ok) {
					throw new Error(`Failed to fetch Zenn articles: ${response.status}`)
				}
				const data = await response.json()
				data.articles.sort(
					(a, b) =>
						new Date(b.published_at).getTime() -
						new Date(a.published_at).getTime(),
				)
				setZennArticles(data)
			} catch (err) {
				console.error(err)
			}
		}

		fetchArticles()
	}, [])

	const formatDate = (dateString: string) => {
		const date = new Date(dateString)
		const year = date.getFullYear()
		const month = String(date.getMonth() + 1).padStart(2, "0")
		const day = String(date.getDate()).padStart(2, "0")
		return `${year}-${month}-${day}`
	}

	return (
		<div className="flx padding">
			{zennArticles?.articles.map((article) => (
				<div className="flx_el" key={article.id}>
					<Link href={`https://zenn.dev${article.path}`} target="_blank">
						<div className="zenn__emoji">{article.emoji}</div>
						<div className="zenn__flex">
							<li className="zenn__tag">{article.article_type}</li>
						</div>
						<p className="zenn__title"> {article.title} </p>
						<p className="zenn__date">{formatDate(article.published_at)}</p>
					</Link>
				</div>
			))}
		</div>
	)
}
